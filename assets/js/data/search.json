[ { "title": "HunterPie v2.8.0", "url": "/posts/update-v2.8.0/", "categories": "Update, v2", "tags": "", "date": "2023-04-19 13:54:00 +0800", "snippet": " If you enjoy HunterPie and want to support its development, consider supporting on Patreon! HunterPie Account - Hunt ExportThe Hunt Export dashboard has been added, it is still a very new and will be actively worked on in the upcoming updates, the goal is to make it as accurate and useful possible, with uptimes, damage points, information from party members, monsters, quest details, etc.As of today, it currently displays: Quest time Real hunt time (how long it actually took to hunt down a monster) DPS graph Party members Enrage uptime for each monster Abnormalities uptimes Quest details Attention: Exported SOS quests are still not accurate due to how they work. That will be worked on in the future.For more information about this feature, refer to the documentation." }, { "title": "The development of HunterPie", "url": "/posts/development-of-hunterpie/", "categories": "Blog, UI", "tags": "", "date": "2023-03-28 13:43:00 +0800", "snippet": " If you enjoy HunterPie and want to support its development, consider supporting on Patreon!Some contextI have been actively developing and maintaining HunterPie and all its dependencies for about 4 years now, the reason why I’m writing this post is not only to show the progress of HunterPie itself, but to also document the progress I had as a software engineer myself.How it all started…It all started back in 2018 with Monster Hunter World, at the time there was 2 overlays that people used: Smart Hunter and Hello World; As someone who is interested in UI and good looking applications, none of them really stood out to me, not only that, but both of them were pretty limited and not really user friendly, in order for you to customize them, you would need to open JSON files in your text editor.With that in mind, I decided to make my own, not only to make something that would look better to me, but that would also help me learn more about software engineering, reverse engineering, UI/UX principles and so on.First IterationsHunterPyHunterPy was made in Python (hence the Py at the end), a dynamic programming language that is really easy to understand due to its simple syntax, however, is not the best language to make good looking UIs and also not the best language to deal with memory reading, the heart of HunterPie. Despite those, I learned a lot while developing it and used a lot of the fundamentals to implement the next iteration of HunterPie.After some time working on HunterPy, I had a simple overlay working pretty alright, all it had was monster health bars but it was enough to get some friends to use it and test it for me. HunterPy user interfaceSome key features that I always wanted to keep were: Discord Rich Presence The overlay A console Settings that you could interact with, instead of a configuration.json fileOne of the problems with making windows with Python is that you can’t just compile the whole software into a single executable due to how Python works, there are some solutions but they generate a bunch of extra files or huge binaries that would be really painful to distribute if I ever wanted other people to use it.That’s when I decided to rewrite everything in another language, something I could compile and just distribute in a nice little package without worrying too much about the package size.The first iteration…The reason why HunterPie is called HunterPie is because it didn’t make sense to keep the Py suffix anymore as the application was no longer being developed in Python, but I really liked how HunterPy sounded, so I just changed the suffix to keep the same sound without making a reference to Python.The next iteration of HunterPie’s user interface looked like this: HunterPie v1 alpha client HunterPie v1 alpha client settingsThe monster widget looked like this: HunterPie v1 alpha Monster WidgetThis iteration had not only the monster health bar, but also the Harvest Box tracker and Specialized Tool trackers.…the next iteration…The next iteration happened 4 months after the first release of HunterPie v1.0.0.0. I learned a lot more about the UI framework I was using and completely designed the client, not only that but I also created my own UI components for the settings window. This next iteration also had more features like: full localization support so other people could localize HunterPie to their languages; a damage meter widget and the abnormalities tracker widget. HunterPie v1 client HunterPie v1 client settingsThe two main widgets of HunterPie looked like this: HunterPie v1 Monster Widget HunterPie v1 Damage Meter WidgetThe design for the Damage Meter was inspired by Shinra Meter, a TERA damage meter overlay that I used a lot when playing the game back in the days.…and the last iterationThe last iteration of HunterPie v1 happened a few months after the previous one, at that point HunterPie had many new features, new widgets for the overlay, it could export the player’s current build to Honey Hunters, export all the charms and decorations your character had, it also had plugins support, HunterPie Native was also a thing, a way that HunterPie was able to communicate directly with the game which allowed many pretty cool things to happen.In this iteration the design structure of the client didn’t change much, but the colors and the settings page did.I wanted a cleaner design for the client, and changing the colors to a baby blue instead of red made things look more modern and less aggressive, not only the accent color changed but HunterPie’s logo also changed to be white instead of red. HunterPie v1 last iteration clientAdding a blur effect to the background also made the client to look more modern, similar to Window’s native acryllic effect.As for the settings page, having every setting in a single component was getting way too cluttered and messy, so I added different tabs for each one of the features, the settings were also aligned in a way so the setting label would be anchored to the left and the actual control for that setting would be on the right-most side, that was a way to solve the weird alignment of the previous iteration. HunterPie v1 last iteration client settingsThe main widgets design also changed, the Monster Widget had another design overhaul to look more simple and modern: HunterPie v1 last iteration Monster WidgetAnd the damage meter got a damage graph! HunterPie v1 last iteration Damage Meter WidgetHunterPie v2The reason why I started rewriting HunterPie from scratch to what would become v2 is because its predecessor had a really messy code base, it got to a point where adding new features was really hard and adding support for the upcoming game (Monster Hunter Rise) would be actually impossible. Everything in v1 was heavily tied to Monster Hunter World, not only that but the whole UI was strongly tied to HunterPie’s core code.So for v2 I decided to fix some issues legacy had: The client UI had to look more modern and clean: I don’t think legacy’s UI was bad, but I don’t think it was great either. The settings page to be generated automatically: This is one of legacy’s biggest issues for me as a developer, everytime I added new settings I had to also create the UI components for it manually. The settings should be saved automatically on change: Legacy couldn’t detect if the settings were changed, so the user had to click on the Save button everytime they made changes. Support any Monster Hunter game: Legacy could only support Monster Hunter World. Write the code in a way that Core code is separate from the UI code: Legacy code didn’t have this distinction, core code could access the UI’d and vice-versa.I will explain each one of those points and how I solved them in a later post, but here’s the result: HunterPie v2 clientThe first thing you can notice is how the colors are much more consistent, they make sense together, it’s no longer a mix of warm and cold colors. The icons are also perfectly aligned now, and they’re all consistent and match the rest of the UI.As for the settings window, I kept the same idea and structure of its predecessor, however it is now possible to search for settings by their label. HunterPie v2 is also capable of automatically saving the settings whenever something changes, so there’s no need for a Save button anymore. HunterPie v2 client settingsNow for the two most used overlay widget, the monster widget got a design overhaul to match the rest of the client UI, in fact, all widgets have gotten a design overhaul to make the UI consistent amongst themselves: HunterPie v2 Monster WidgetAnd the damage meter had a lot of UI improvements too: HunterPie v2 Damage Meter WidgetFinal ConsiderationsThere were a lot of enhancements to HunterPie’s user interface throghout time, most of the things were just trial and error, see what works and what does not. Some came with time and experience after I started working as a software engineer and started having more contact with real world software.The user interface is just the tip of the iceberg for HunterPie, there’s a lot going on behind it, a lot of time and effort put into researching the games, designing and coding HunterPie’s UI, coding internal things used in the core of HunterPie, coding the native part that is required for some features, coding the backend, maintaining all the infrastructure, etc.And of course, each one of those individual pieces that make HunterPie work the way it does deserve their own post. Fun fact: I have spent +2,1K hours on HunterPie (Client and Server) and a couple hundred hours reverse engineering both Monster Hunter World and Monster Hunter Rise. Which is kinda insane, honestly." }, { "title": "Hunt Export", "url": "/posts/hunt-export/", "categories": "Documentation, Account, Feature", "tags": "", "date": "2023-03-27 14:09:00 +0800", "snippet": "AboutHunt export is one of HunterPie Accounts feature, it will automatically keep track and upload all quests you complete successfully, keeping a history of all your previous hunts.The hunt export is separated into two pages, the summaries and the dashboard.SummariesThe summaries page displays all the hunts that are available for you to visualize in the dashboard. Note that the amount of hunts are limited by your account tier.Account Tiers Tier Access Free Up to 7 days of hunts. Low Rank ($1) Up to 30 days of hunts. High Rank ($5) Unlimited Tempered ($10) Unlimited Arch-Tempered ($20) Unlimited DashboardThe dashboard is where you can visualize the details of the hunt, this includes: Damage over time; Enrage uptimes and activation spans; Abnormalities uptimes and activation spans; Party members; Other information about the quest and monsters; Note: More information will be added in the future, this includes deaths and more detailed information about damage and weapon attacksKnown Issues Quests that were joined mid-hunt are not tracked properly Otomos are not displayed Really old exported hunts have 100% enrage uptimes" }, { "title": "HunterPie v2.7.0", "url": "/posts/update-v2.7.0/", "categories": "Update, v2", "tags": "", "date": "2023-02-10 07:23:00 +0800", "snippet": " If you enjoy HunterPie and want to support its development, consider supporting on Patreon!HunterPie v2.7.0 is finally here with a lot of new features! HunterPie Account - Hunt ExportThe Hunt Export is a feature that will be split in two parts, the first one is coming on this version of HunterPie, it consists of tracking your hunt data and once the quest is over, exporting it and linking it to your HunterPie account so you can see that data in a dashboard.The second part of this feature will come on v2.8.0, which is the actual UI that you can use to visualize the exported data.Here’s a sneak peek of the dashboard that will be released in v2.8.0: Note: The UI in the video is not the final result and WILL be changed to look better. It is also possible to turn off this feature if you’re not interested in getting your hunts uploaded. HunterPie Account - Settings Sync HunterPie is now able to synchronize your local settings so you should never lose your settings again Damage Meter Widget HunterPie is now able to track companion’s damage Activities Widget Added Harvest Box tracker for Monster Hunter World Added Argosy tracker for Monster Hunter World Added Steamworks tracker for Monster Hunter World Added Meowmasters tracker for Monster Hunter World Note: It is also possible to turn off activities separately if you are not interested in seeing one of them Abnormalitites WidgetAdded support for new abnormalities: Monster Hunter Rise: Minor Bubbleblight Dango Defender Frenzy Immunity Leeched Sharpness Extension Dango Hunter Dango Connector Agitator Defiance Interpid Heart Heroics Peak Performance Dragonheart Pre-Sleep Health Regen. (Bleed) Powder Mantle (Red) and (Blue) Strife (S) and (L) Maximum Might Berserk Status Trigger Monster Hunter World: Demondrug Mega Demondrug Armorskin Mega Armorskin Bug Fixes Fixed bug where HunterPie would remove the last players from party if someone else dropped the session in Monster Hunter World Fixed bug where HunterPie would not detect multiple players with the same name Fixed bug where HunterPie would fail to reach the backend if header had a new line character in it Fixed bug where HunterPie would try to hash all files during self-updates instead of only the required files for the update" }, { "title": "Troubleshooting", "url": "/posts/troubleshooting/", "categories": "Documentation, Issues", "tags": "", "date": "2022-11-27 01:43:00 +0800", "snippet": "If you’re having an issue with HunterPie like crash or freezes, do the following: If you’re having freezing issues or crashes, skip to Memory DumpMemory DumpDebugging a software without any data that can be analyzed is really hard, so if your HunterPie is constantly freezing, you can try generating a memory dump of HunterPie’s process so I can analyze it and see if there’s anything weird going on. To generate a memory dump, do the following: Open the command prompt by opening Window’s search and typing cmd Run the following command dotnet tool install --global dotnet-gcdump Once the tool finishes installing, open Windows’s Task Manager (Ctrl+Shift+Esc), click on the Details tab and look for a HunterPie.exe, the details tab should have a column labeled as PID, you’ll need to grab HunterPie’s PID. Run the following command, replacing &amp;lt;PID&amp;gt; with HunterPie’s actual PID that you got from the previous step: dotnet gcdump collect -p &amp;lt;PID&amp;gt; It will print something like:Writing gcdump to &#39;&amp;lt;PATH_TO_GCDUMP_HERE&amp;gt;&#39;... Finished writing &amp;lt;NUMBER_OF_BYTES&amp;gt; bytes.Now that you’ve dumped HunterPie’s memory to a .gcdump file, just send that file to me on Discord: Haato#0001 or in HunterPie’s official server." }, { "title": "Player Hud Widget", "url": "/posts/player-hud-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-11-27 01:43:00 +0800", "snippet": "The Player Hud Widget is responsible for tracking and displaying the data related to your character’s health and stamina, as well as tracking your weapon’s sharpness.Widget StructureHealth barThe health bar can be broken down into 5 pieces: Maximum Possible Health: This is the white bar that’s behind all the other bars, it represents your maximum possible health, in Monster Hunter Rise, this is the bar that shows how much your actual health can be expanded to by consuming the green birds. Max Health: This is represented by the dark bar behind the recoverable health, heal and health. Recoverable health: This is your health that can be recovered naturally over time. Heal: This is the bar that will represent the healing when you’re consuming an item that can heal your life, it’s represented by the light green bar. Health: This is your actual health, it’s represented by the green bar.Stamina BarThe stamina bar can be broken down into 4 pieces: Maximum Possible Stamina: This is the maximum possible stamina you can have, it’s represented by the white bar that’s behind all the other bars. In Monster Hunter Rise, this is the bar that shows how much your actual stamina can be expanded to by consuming the yellow birds. Max Stamina: This is the bar that shows you what’s your current maximum stamina, represented by the dark bar behind the stamina bar. Recoverable stamina: This bar will show how much stamina you can recover by eating rations or meat, it’s represented by the hollow bar with the red border around it. This only happens in Monster Hunter Rise. Stamina: This is your actual stamina, it’s represented by the orange-ish bar.AbnormalitiesWhen your character is suffering from a debuff, your health bar or stamina will change it’s color to match the element that is currently active. Fire Poison Bleed Nat. Heal Water Ice Effluvia SharpnessHunterPie tracks your sharpness, and displays it in a gauge. The colors for each level are the following: Red Orange Yellow Green Blue White Purple It’s also possible to override those colors with theme files, in case you want custom colors for each level.&amp;lt;Color x:Key=&quot;WIDGET_SHARPNESS_BROKEN&quot;&amp;gt;#000000&amp;lt;/Color&amp;gt;&amp;lt;Color x:Key=&quot;WIDGET_SHARPNESS_RED&quot;&amp;gt;#D13232&amp;lt;/Color&amp;gt;&amp;lt;Color x:Key=&quot;WIDGET_SHARPNESS_ORANGE&quot;&amp;gt;#F78B00&amp;lt;/Color&amp;gt;&amp;lt;Color x:Key=&quot;WIDGET_SHARPNESS_YELLOW&quot;&amp;gt;#F7E024&amp;lt;/Color&amp;gt;&amp;lt;Color x:Key=&quot;WIDGET_SHARPNESS_GREEN&quot;&amp;gt;#5BF77F&amp;lt;/Color&amp;gt;&amp;lt;Color x:Key=&quot;WIDGET_SHARPNESS_BLUE&quot;&amp;gt;#49B2E3&amp;lt;/Color&amp;gt;&amp;lt;Color x:Key=&quot;WIDGET_SHARPNESS_WHITE&quot;&amp;gt;#EAF5F4&amp;lt;/Color&amp;gt;&amp;lt;Color x:Key=&quot;WIDGET_SHARPNESS_PURPLE&quot;&amp;gt;#cd55e6&amp;lt;/Color&amp;gt;In-Game HUDTo avoid cluttering the screen, you can disable the in-game HUD:Monster Hunter Rise" }, { "title": "HunterPie v2.6.0", "url": "/posts/update-v2.6.0/", "categories": "Update, v2", "tags": "", "date": "2022-11-27 01:18:00 +0800", "snippet": " If you enjoy HunterPie and want to support its development, consider supporting on Patreon!HunterPie v2.6.0 is finally here with a lot of new features! Player HUD WidgetThis new widget is responsible for displaying your character’s health, stamina and sharpness in a simple health bar, it also displays how many hits you have left until your sharpness level decreases.The widget’s design is the following:You can also see it in action in the video below:The player HUD does not display buffs on top of the player’s health bar, for that you need to use the Abnormalities Widget. Tip: Refer to the documentation for more information. OptimizationsThis update also brings some minor and major optimizations to HunterPie, below you can see the benchmark comparing both the old scanning method and the new one.Although the new implementation is only 12% faster, it is a lot more stable when you compare the slowest scan passes compared to the old implementation. Other changes Added hotkey to toggle overlay (default: Ctrl+Alt+O); Added support for new abnormalities: Adrenaline Rush, Sleep, Stun, Paralysis; HunterPie now downloads localization files from the CDN instead of updating them only during updates; Apex monsters no longer display the capture icon; Introduced Smart Events to handle internal events within HunterPie’s core; Bug Fixes Fixed memory leak due to smooth bar animations; Fixed memory leak due to internal events not being unsubscribed on game exit; Fixed Qurio part health displaying even when Qurio wasn’t active for that specific part; Fixed HunterPie crashing when loading an invalid theme file; Fixed HunterPie crashing or throwing a lot of exception messages in the console during the scanning process; Fixed HunterPie not cancelling self-update when binaries are not downloaded successfully;" }, { "title": "HunterPie v2.5.0", "url": "/posts/update-v2.5.0/", "categories": "Update, v2", "tags": "", "date": "2022-11-03 06:29:00 +0800", "snippet": "HunterPie v2.5.0 is finally here with a lot of new features! Monster Widget - QurioHunterPie now supports Qurio monsters: Added Qurio Threshold bar; Added support for Qurio parts; Added Qurio monster icon; Before entering Qurio state After entering Qurio state Abnormalitites WidgetAdded support for the following abnormalities: Monster Hunter Rise: Sunbreak Bloodblight; Grinder (S); Coalescence; Demondrug; Mega Demondrug; Armorskin; Mega Armorskin; Damage Meter Added maximum deaths for quest; Patch Notes TabHunterPie has a new dedicated tab for the latest patch notes. Bug Fixes Fixed Capture indicator appearing for Qurio monsters; Fixed submarines total item count miscalculation; Fixed bug where HunterPie wouldn’t retry requests in case of timeout;" }, { "title": "HunterPie v2.4.0", "url": "/posts/update-v2.4.0/", "categories": "Update, v2", "tags": "", "date": "2022-10-13 02:16:00 +0800", "snippet": "HunterPie v2.4.0 is finally here with a lot of new features! AccountsHunterPie accounts will be part of HunterPie’s core features, although it is not required to have one to use the overlay, HunterPie will be getting more account-related features in the upcoming updates. Here are some of the planned features that will require an account: HunterPie configuration cloud synchronization; Hunt details; Tip: Refer to the documentation for more information. Game saves backup This feature requires an account.Having a HunterPie account will allow HunterPie to automatically backup your save files and upload them to the cloud. You can read more about the backup feature here. Damage Meter - Monster Hunter World HunterPie can now calculate your damage when in expeditions and Guiding Lands. Warning: This feature requires Stracker’s loader to work properly. UX enhancementsHunterPie’s client animations have been reworked and some new animations have been added when interacting with the main client window. Added transition animations when opening different views in the main window; Added animations to tooltips when hovering over UI components; Added smooth scrollbar; Added fade-in and slide-in animations to setting elements when changing setting tabs; Changed button colors and rounded their corners; Added Github button to the sidebar container; Bug Fixes Fixed a bug where Meowmasters step counter would show as 6/5 when Meowmasters are back in town." }, { "title": "HunterPie Account", "url": "/posts/account/", "categories": "Documentation, Account, Feature", "tags": "", "date": "2022-10-10 14:08:00 +0800", "snippet": "AboutHunterPie Account is one of it’s core features, although not necessary, it’s highly recommended to have an account because that way you can use HunterPie at its fullest.Exclusive FeaturesHaving an account will give you the access to the following features: Hunt Export: Your hunts will be tracked and uploaded so you can visualize them in a dashboard. You can read more here Remote HunterPie settings: Your configurations will be tied to your account instead of being saved locally only. Automatic game saves backup: HunterPie will automatically backup your game saves and upload them to the cloud. You can read more here Note: More account-exclusive features will be added in the future.Creating an account Click on the Sign Up button in your HunterPie’s side bar; Fill the required information and click on the Register button; HunterPie will automatically send you an email to verify the email associated to your account; After verifying the email, you can now login into your account! Warning: The process of receiving a verification email should be instant but might take a few minutes depending on your email provider. Make sure to also check your spam and trash folders.Supporter AccountYour account will be automatically turned into a supporter account if you create it using the same email you used when creating your Patreon account. By being an active supporter you also get access to BETA updates and upgrades to some of the existing features.Supporter TiersThere are 4 different supporter tiers, depending on your tier, you will get an enhancement to the existing HunterPie features. The available tiers can be found here." }, { "title": "HunterPie Account - Saves Backup", "url": "/posts/saves-backup/", "categories": "Documentation, Account, Feature", "tags": "", "date": "2022-10-10 13:33:00 +0800", "snippet": " This feature can be disabled in your account settings.One of the features of having a HunterPie Account is that HunterPie will automatically backup your save and upload it to the cloud, this way you can play Monster Hunter games without worrying about your save getting corrupted.The backups are available under your account details screen.How it works?HunterPie will automatically handle backups of your game saves, the limit on how often and how many backups you can have at once depends on your type of account. Account Number of Backups (total) Rate limit Standard 2 backups (total) Once every 72 hours Supporter 5 backups (total) Once every 24 hours Backup list You can download the backup file by clicking on the button, HunterPie will download the file into the HunterPie/Backups folder as a .zip file. To open the Backups folder quickly, you can also press the button. In case you want to manually delete a backup file, just click on the button. Warning: Keep in mind that deleting a backup file manually WILL NOT reset your rate limit." }, { "title": "HunterPie v2.3.0", "url": "/posts/update-v2.3.0/", "categories": "Update, v2", "tags": "", "date": "2022-08-24 12:54:00 +0800", "snippet": "HunterPie v2.3.0 is finally out and brings new features and fixes! Themes Added theme support, it is now possible to fully customize every Widget appearance. Activities Widget Added Meowmasters tracker. Added Cohoot Nest tracker. Minor design changes to the widget components. Activities Widget Damage Meter Widget Added Master Rank to be displayed on top of the player’s weapon icon. Added Otomo’s damage tracker. Bug Fixes Fixed Chat Widget. Fixed bug where HunterPie would crash if someone left the party unexpectedly. Fixed bug where DPS would be recalculated if a party member changed their weapon in the tent." }, { "title": "HunterPie v2.2.0", "url": "/posts/update-v2.2.0/", "categories": "Update, v2", "tags": "", "date": "2022-07-20 13:18:00 +0800", "snippet": "HunterPie v2.2.0 is finally out and brings a lot of new features and enhancements!General Upgraded required .NET version to 6.0, you can download it from here. Added support for the following Monster Hunter Rise abnormalities: Chain Crit (Under armor skills) Stinkmink (Under consumables) Added option to configure animations framerate Added localization for enumerations Added Master Rank to Discord Rich Presence for Monster Hunter Rise Minor optimizations to widgets Changed abnormality settings tab icon to a proper iconDamage Meter WidgetOne of the most asked features is now available for Monster Hunter Rise! The Damage Meter tracks yours and your team mates damage and display it in a modern-looking meter and plotting graph. The following strategies were added to the damage meter graph: Plot by total damage Plot by DPS The following strategies were added to the DPS calculation: DPS relative to join time DPS relative first hit DPS relative to quest timer The way how HunterPie calculates the damage done by each player is by looking at each individual hit and summing them up, right now it will ONLY considerate the damage done by each player’s weapon. The following damages are not accounted for when calculating damage done by each player: Environmental damage Damage done by other monsters Damage done by ailments (e.g: Poison, blast, etc) Note: Damage calculation may change in the future. Tip: Refer to the documentation for more information.Monster Widget Added monster weaknesses Added capture indicator Tip: Refer to the documentation for more information.HunterPie Native InterfaceHunterPie Native Interface is responsible for sending data from inside the game’s process to HunterPie, this is required for features that depends on function hooking such as Monster Hunter Rise damage meter.Bug Fixes Fixed unmapped part names for some monsters in Monster Hunter: World Fixed memory leak due to in-memory custom font Fixed enrage counter Fixed HunterPie logo asymmetry Fixed widgets not being closed properly after Monster Hunter World is closed" }, { "title": "Specialized Tool Widget", "url": "/posts/specialized-tools-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-06-16 22:00:00 +0800", "snippet": "The Specialized Tool Widget is responsible for tracking and displaying your primary and secondary equipped specialized tools cooldown and timers. They also visually indicate which mantle or booster it is currently tracking by their icons and color. This Widget is only available for Monster Hunter: World.Widget Structure Specialized Tool Widget Structure" }, { "title": "HunterPie v2.1.0", "url": "/posts/update-v2.1.0/", "categories": "Update, v2", "tags": "", "date": "2022-06-15 10:57:00 +0800", "snippet": "HunterPie v2.1.0 contains the second part of the full Monster Hunter World support.General Added supporter badge on top of the HunterPie’s window. HunterPie no longer saves its configurations on exit. Adjusted HunterPie settings window margin. Adjusted Damage Meter icon in the settings window.Monster Hunter: WorldMonster Widget Added tenderize information to monster’s part health bars. Severable and normal parts now have different colors.Specialized Tool WidgetThe specialized tool widget is the one responsible for showing your primary and secondary specialized tool cooldown and timer. Tip: Refer to the documentation for more information.Bug Fixes Fixed a bug where widgets wouldn’t be hidden in NPC dialogs even when the “Hide when HUD is open” option is enabled in Monster Hunter Rise. Fixed a bug where HunterPie would crash if there were duplicate constant names in the map file. Fixed a bug where Training Dojo state bar size would go back and forth when there were 0 days left for training." }, { "title": "Damage Meter Widget", "url": "/posts/damage-meter-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-06-15 10:21:00 +0800", "snippet": "The Damage Meter Widget is responsible for tracking and displaying yours and your party members damage and damage per second, as well as plotting everything in a graph for better understanding of your hunts.Widget Structure Damage Meter widget demonstrationDamage AccuracyMonster Hunter RiseTo calculate the damage for Monster Hunter Rise, HunterPie will sum every hit damage and assign it to whoever did the damage. This does not consider: Environmental damage Damage done by palamutes/palicos Damage done by companions Damage done by ailments (e.g: poison, blast) Damage done by other monsters Warning: Hitting a dead monster will still count as damage done to a monster. This is a known issue and will be fixed eventually.SettingsPlayer colorsYou can change yours and your party members color by going to the settings tab and clicking on the color configuration.Damage plotThe damage meter widget has a built-in plot graph, by default it shows your damage per second over time, however, you can also change it to display total damage instead. Note: Changing the plot mode while in a hunt will not update the previous points that were already plotted in the graph.DPS CalculationBy default, HunterPie will calculate the damage per second based on the quest timer, however, this can be inaccurate especially when joining in-progress quests (such as SOSes), you can change the DPS calculation strategy in the Damage Meter settings. Strategy Description Relative to quest The quest timer will be used to calculate players DPS Relative to join The time when each player joined the quest will be subtracted from the quest timer when calculating players DPS Relative to first hit The time when each player hit a monster for the first time will be subtracted from the quest timer when calculating players DPS " }, { "title": "HunterPie v2.0.23", "url": "/posts/update-v2.0.23/", "categories": "Update, v2", "tags": "", "date": "2022-05-02 03:51:00 +0800", "snippet": "HunterPie v2.0.23 contains the first part of the full Monster Hunter World support.General Changed Mount ailment name to Ride for Monster Hunter Rise Changed visual component for hotkeys Changed visuals of ComboBox Changed HunterPie client color scheme to be more consistent Added Offensive Guard abnormality for Monster Hunter RiseConfigurationSince HunterPie can support multiple games, it allows you to configure games separately, so you can have a different overlay configuration for each game.Choosing which game to configure is rather simple, just choose the game by its name in the box in the bottom of HunterPie’s settings window.Monster Hunter: WorldOne of the main reasons HunterPie v2 exists is to support multiple games from the Monster Hunter series, this update brings support for Monster Hunter: World and some of the main overlay Widgets that v1 has at the moment.OverlayMonster WidgetCompared to HunterPie legacy, the monster widget now has 100% accurate lockon detection, supports more than 3 monsters. Tip: Refer to the documentation for more information.Abnormalities WidgetRight now, HunterPie supports most of the abnormalities Monster Hunter: World has, with exception of potions that last forever like Demondrug and Armorskin. Tip: Refer to the documentation for more information.Damage Meter WidgetThe damage meter is something that’s part of the core of HunterPie legacy, in v2 there were a lot of enhancements: Quest timer is now 100% accurate and displays the right time even for in-progress quests (like SOSes)." }, { "title": "Chat Widget", "url": "/posts/chat-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-04-01 10:54:00 +0800", "snippet": "The Chat Widget is responsible to display in-game messages from other players.Widget StructureWhy does it exist?Monster Hunter: Rise’s built-in chat was made for Switch and not for PC, making it really difficult to read messages and also keep track of them. Whenever you get a message, it stays on screen for about 10 seconds and then fades away, if you want to read the message again, you are obligated to go to your in-game settings, open the chat messages and then open the chat, which can become very annoying if you play online with friends often.HunterPie’s chat solves this issue by showing only the player messages, and it also shows the widget whenever you press Enter to type in the chat. Warning: Preset messages will not be shown in the chat." }, { "title": "Activities Widget", "url": "/posts/activities-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-04-01 10:39:00 +0800", "snippet": "The Activities Widget is responsible for tracking and displaying the data from side activities in the game as Submarines, Training Dojo, etc.Widget StructureSupported ActitivitesMonster Hunter: Rise Submarines Training Dojo Meowmasters and other activities will be supported in the future." }, { "title": "HunterPie v2.0.22", "url": "/posts/update-v2.0.22/", "categories": "Update, v2", "tags": "", "date": "2022-04-01 09:28:00 +0800", "snippet": "HunterPie v2.0.22 brings some new features, fixes and optimizations.General Added support for Monster Hunter Rise v3.9.1.0 Added Party state and size to Discord Rich Presence Added option to automatically close HunterPie when game is no longer running Added option to start HunterPie on background Added option to not show confirmation popup on exit Added option to hide individual widgets when the in-game HUD is visible (e.g when you’re in camp, talking to NPCs, with game menu open, etc) HunterPie now updates settings file in real time Optimizations to the UI thread Optimizations to the Scan thread Minor visual enhancedments to the main window HunterPie now displays the last config sync time in the Settings tabActivities WidgetThe Activities Widget tracks and displays your Submarines, Training Dojo and Training buddies data. Tip: Refer to the documentation for more information.Chat WidgetThe Chat Widget displays messages from your chat so you won’t lose track of them during a hunt. This widget is designed to only show actual messages, no NPCs, no system messages nor notifications from the game. Tip: Refer to the documentation for more information.Abnormalities Widget Added Protective Polish Added Arc Shot: Brace Added Arc Shot: AffinityBug Fixes Fixed a bug where HunterPie would still try updating Rich Presence when it’s disabled Fixed bug where HunterPie would crash when trying to unload an unitialized widgets Fixed CDN download causing HunterPie to crash due to unauthorized file access Fixed wrong string for Training Dojo setting Fixed default widget positions Fixed bug where HunterPie would not parse floats separate by comma due to cultural dependent system Fixed memory leak due to garbage memory values in the string lengths, causing HunterPie to read a large array of bytes" }, { "title": "HunterPie v2.0.21", "url": "/posts/update-v2.0.21/", "categories": "Update, v2", "tags": "", "date": "2022-03-02 03:51:00 +0800", "snippet": "HunterPie v2.0.21 brings some new features, fixes and design changes.General Added support for Monster Hunter Rise v3.9.0.0 Added option to patch game function to render the Wirebug aim even when the Wirebug Gauge HUD is disabled. Added option to hide Overlay when the game is not focused. Added option to hide unknown parts (parts labeled as ???). Added Patreon button in HunterPie’s sidebar. HunterPie now reports crashes automatically to the developer. It’s now possible to scale a widget while in design mode by using the Mouse Scroll while hovering on the Widget. It’s now possible to change a widget’s opacity by pressing Ctrl + Mouse Scroll while hovering on the Widget.Wirebug WidgetThe Wirebug Widget tracks and displays all the useful information you need to know about your Wirebugs, as cooldown, timers and if they’re available or not. Its designed to replace the in-game Wirebug Gauge, however, you can also place it on top of the in-game UI too. Wirebug Widget example Tip: Refer to the documentation for more information.ClientThe HunterPie has also gotten a new visual to some elements in it’s client window New console window design New settings window designBug Fixes Fixed bug where HunterPie would try to render an invalid part and throw an error." }, { "title": "Wirebug Widget", "url": "/posts/wirebug-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-02-27 12:25:00 +0800", "snippet": "The Wirebug Widget is responsible for tracking and displaying all your Wirebugs information as cooldown, timer and if they’re available or not. This widget is quite simple and follows the same design as the in-game Wirebug gauge.Widget StructureIn-Game HUDReplacing the in-game Wirebug Gauge is quite simple, while in-game, open the HUD settings and disable the Wirebug Gauge. Attention: Disabling the in-game Wirebug Gauge also disables the Wirebug aim, to fix this, enable the Patch in-game Wirebug Aim option in your HunterPie’s Wirebug settings." }, { "title": "Localization", "url": "/posts/localization/", "categories": "Documentation, General", "tags": "", "date": "2022-02-18 11:07:00 +0800", "snippet": "HunterPie supports different languages other than English, if you want to localize it to another language make sure to read this because it covers everything you need to know to make your own localization file.LocalizationsThe supported languages are: Language Translated (%) Getting StartedRequirements A decent text editor, I personally recommend: Visual Studio Code Sublime Text Notepad++ The default strings file, you can find it here Tip: Do not use the default Windows’s notepad, that can cause file encoding issues and will make HunterPie fail to load your file. Make sure your encoding file is UTF-8.LocalizingNow thhat you have the requirements, it’s time to start translating!Use the en-us.xml you downloaded in the last step as a base file, it contains all the currently supported strings that are used by both the HunterPie client and the Overlay and the integrations. Warning: Make sure to rename your file to something else so it doesn’t conflict with the default files. If you don’t rename it, there’s a risk your local file will be overwritten during the auto-update process.Do not touch the first line of the XML Document, that is telling our XML parser the version and file encoding we are using. It should ALWAYS be the first line of the file and should always look like this:&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt;&amp;lt;!-- Comments can be added ONLY after the tag --&amp;gt;Next step is to set the language name, you can do it in the next Tag by changing the value of the lang attribute.&amp;lt;!-- Before --&amp;gt;&amp;lt;Strings lang=&quot;English&quot;&amp;gt;&amp;lt;!-- After --&amp;gt;&amp;lt;Strings lang=&quot;Japanese&quot;&amp;gt;Now we’re can translate the rest of the file, most localization Tags have three attributes: Id: Used internally by HunterPie to query the string and description. DO NOT TOUCH THIS VALUE String: The actual string that will be shown in HunterPie’s interface. Description: This one is only used in places where there can be a tooltip, e.g: Settings, Buttons Please, try to keep all translations as accurate as possible with the in-game strings (especially abnormalities and monster names). You can shorten long strings as long as they don’t become difficult to understand.E.g:&amp;lt;!-- Before --&amp;gt;&amp;lt;Rise&amp;gt; &amp;lt;Monster Id=&quot;0&quot; String=&quot;Rathian&quot;/&amp;gt; &amp;lt;Monster Id=&quot;1&quot; String=&quot;Apex Rathian&quot;/&amp;gt; &amp;lt;Monster Id=&quot;2&quot; String=&quot;Rathalos&quot;/&amp;gt; &amp;lt;Monster Id=&quot;3&quot; String=&quot;Apex Rathalos&quot;/&amp;gt; &amp;lt;Monster Id=&quot;4&quot; String=&quot;Khezu&quot;/&amp;gt; &amp;lt;Monster Id=&quot;5&quot; String=&quot;Basarios&quot;/&amp;gt; [...]&amp;lt;!-- After --&amp;gt;&amp;lt;Rise&amp;gt; &amp;lt;Monster Id=&quot;0&quot; String=&quot;リオレイア&quot;/&amp;gt; &amp;lt;Monster Id=&quot;1&quot; String=&quot;ヌシ・リオレイア&quot;/&amp;gt; &amp;lt;Monster Id=&quot;2&quot; String=&quot;リオレウス&quot;/&amp;gt; &amp;lt;Monster Id=&quot;3&quot; String=&quot;ヌシ・リオレウス&quot;/&amp;gt; &amp;lt;Monster Id=&quot;4&quot; String=&quot;フルフル&quot;/&amp;gt; &amp;lt;Monster Id=&quot;5&quot; String=&quot;バサルモス&quot;/&amp;gt; [...]XML Special CharactersXML has some characters that should be replaced by their escaped versions in order for it to work. This is because these characters are used in the XML’s structure itself, and the parser has a hard time figuring out whether it’s a XML character or if it’s just a normal character. Character Replaced by &amp;amp; &amp;amp;amp; &amp;lt; &amp;amp;lt; &amp;gt; &amp;amp;gt; ” &amp;amp;quot; ’ &amp;amp;apos; E.g:&amp;lt;!-- This will give us an error --&amp;gt;&amp;lt;Abnormality Id=&quot;ABNORMALITY_ATTACK_DEF_UP&quot; String=&quot;Attack &amp;amp; Def. Up&quot;/&amp;gt;&amp;lt;!-- This will work --&amp;gt;&amp;lt;Abnormality Id=&quot;ABNORMALITY_ATTACK_DEF_UP&quot; String=&quot;Attack &amp;amp;amp; Def. Up&quot;/&amp;gt;Sending my localizationNow that you’ve finished translating all strings, you can open a Pull Request to HunterPie’s repository or send it in the #translation-discussion channel in HunterPie’s official Discord Server. Making your own Pull Request is the preferred way, since it will also mark you as one of HunterPie’s contributors in GitHub, but if you have no Git experience sending the file directly to me on Discord is also fine." }, { "title": "Frequently Asked Questions", "url": "/posts/faq/", "categories": "Documentation, General", "tags": "", "date": "2022-02-17 02:42:00 +0800", "snippet": "Windows is asking me to install .NET 6, what do I do?HunterPie requires .NET 6.0 Desktop Runtime to run properly, you can download it from Microsoft’s official site by clicking here.Moving and Scaling WidgetsTo move a widget you can either use Design Mode (togglable by pressing the default hotkey: ScrollLock) or set the absolute coordinations in HunterPie’s settings.To scale a widget, you can go to HunterPie’s settings for that widget and use the Scale slider. For more information about widgets, check the Overlay and Widgets documentations.Why aren’t my settings saving?Make sure your HunterPie’s folder is not in read only mode, if that doesn’t work, try moving your HunterPie folder to somewhere else.My auto update is getting stuckSame as the previous issue, make sure your folder is not in read only mode, also try moving its folder somewhere else.My overlay seems delayedSome people has reported that as a Windows 11 issue, some known work arounds for that include: Changing rendering strategy to Software in HunterPie’s setttings. Enabling compatibility mode for HunterPie" }, { "title": "HunterPie v2.0.20", "url": "/posts/update-v2.0.20/", "categories": "Update, v2", "tags": "", "date": "2022-02-17 02:14:00 +0800", "snippet": "HunterPie v2.0.20 brings some new features and fixes.General Patch notes button now opens the current update patch notes in HunterPie’s documentation Added supporter tokens, allowing Patreons to receive beta updates Added some development options to the Advanced Debug ToolsAbnormality TraysAbnormality Trays are bars that track and display your character’s buff and debuff timers, they can be used in case you want to know how long your Hunting Horn buff will last, for example.As of now, HunterPie supports the following categories for buffs, not all of the buffs are supported, but they will be added whenever possible: Songs Consumables (this also includes environment buffs) Debuffs Gear skills Food skills Abnormality tray showing buffs and debuff Refer to the documentation for more information.Monster WidgetNew featuresMonster Widget has gotten some visual enhancements to the parts components, now it displays flinch, break and sever values. Since all parts have flinch values, the bars will still show that info once you can no longer break/sever it. Added horizontal orientation for Monster Widget. Added dynamic resizing for health bars depending on how many monsters the Widget is showing at the moment Added minimum width for Monster health bars Added flinch, severable and breakable partsPartsEach color represents a different type of part: Color Represents Description Flinch Flinch values represent when the monster is going to flinch or get staggered. Break Break values represent when a part is about to break. Sever Severable parts are the ones that can be cut off from a monster. Broken A part will become Grey when it’s either broken or severed. Severable partsSeverable parts are the parts that can be physically removed from the monster’s body, like tail and horns. Severable and Breakable partBreakable partsBreakable parts are the parts that can be broken, showing the “Part was broken” message in the game. Breakable and Flinch part Refer to the documentation for more information.Bug Fixes Fixed Somnacanth part order Fixed wrong Chameleos part order Fixed wrong pointer to monster flinch values, causing some monsters to not show any part data at all. Fixed bug where monsters would not despawn once dead. Fixed bug where HunterPie would show invalid parts before all valid parts. Fixed bug where HunterPie wouldn’t hide monster health percentage in Discord Rich Presence properly Fixed bug where HunterPie would fail to find game process due to cultural differences in UTF-8 characters" }, { "title": "Widgets", "url": "/posts/widgets/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-02-15 06:03:00 +0800", "snippet": "Widgets are part of HunterPie’s core, they’re the components that hold the widget’s content to display their data to the user.SettingsBy default, every widget has 6 default settings: Setting Description Initialize Widget When enabled, this Widget will be initialized when the game process is detected by HunterPie. Having this disabled is good for performance in case you’re not interested on what this Widget has to show. Show Widget When enabled, the Widget will be shown whenever it has content to be displayed, having this turned off will make it not show the Widget at all, however, it will still be in-memory tracking all data. Widget Opacity Sets the general widget opacity, the lower, the more transparent it will become. Widget Scale Sets the widget linear scale, 1 is the default scale, or 100% of it’s original scale, 2 means 200% of it’s original scale, therefore, making it 2x bigger. Streamer Mode Widgets are invisible to your system, making OBS fail to find them when you want to also record the overlay. This setting is a workaround for that OBS limitation. Widget Position Sets the absolute X and Y coordinates for this widget, this is relative to your main screen, values can be negative in case you have a screen on the left side of your main monitor. " }, { "title": "Monster Widget", "url": "/posts/monster-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-02-15 06:03:00 +0800", "snippet": "The Monster Widget is responsible to track and display all the big monsters information. It is one of the most complex widgets and each single component is designed to be simple without losing information.Widget StructureMonster PartsParts are represented by the blue, yellow and red bars under the ailments component. Their visual representation depends on what type of part it is: Color Represents Description Flinch Flinch values represent when the monster is going to flinch or get staggered. Break Break values represent when a part is about to break. Sever Severable parts are the ones that can be cut off from a monster. Broken A part will become Grey when it’s either broken or severed. Qurio* A part will become Pink when it’s related to the monster’s Qurio state. When a part has all three values, the priority order is always Qurio &amp;gt; Sever &amp;gt; Break &amp;gt; Flinch and the exact values displayed under the part health bar will follow that priority. By default, HunterPie only shows monsters’s parts when you lock/focus on the monster using the in-game lock-on system. A Qurio part is exclusive for Monster Hunter Rise: SunbreakMonster AilmentsAilments are statuses and debuffs you can inflict on a monster, HunterPie supports all of them, however, some of them might display as Unknown since ailments are mapped manually and require testing.They’re designed to be as simple to read as possible, displaying Build Up, Duration and also how many times that Ailment has been activated on that monster. Each ailment has it’s own individual color to make it easier to know what ailment has been inflicted without having to read it’s name. By default, HunterPie only shows monsters’s ailments when you lock/focus on the monster using the in-game lock-on system.Targeting a monsterHaving to target a monster to see their information is part of HunterPie’s design to avoid cluttering the screen with multiple monsters information, to target a monster, all you need to do is use the in-game lock-on system. If you have targeting system disabled in-game, this will not work. You must have either Target or Focus enabled.Capture indicatorFor capturable monsters, an upside down triangle () will be placed on the exact percentage where the monster will become capturable. Once it’s health falls into the capturable threshold, a shock trap icon () will be displayed.OrientationMonster Widget supports two orientations, Vertical and Horizontal Orientation Description Vertical Monster health bars will be placed on top of each other in the order they spawn Horizontal Monster healht bars will be placed side by side in the order they spawn Horizontally aligned barsDynamic ResizingDynamic resizing is one of the Monster Widget’s features, it’s very useful when your widget is in the Horizontal mode, it tries to calculate the health bar’s width dynamically instead of having a static width based on how many monsters the widget is displaying at that moment.The width is calculated based on the width set as Minimum Width, using the following formula:\\[dynWidth = min + ((3 - n) * {min \\over 4})\\] min: Minimum Width n: Number of monsters visibleSo, if you set the minimum width as 300, each possible case will result in these dynamic widths: Monsters visible Width (px) 3 300 2 375 1 450 Note: Even if the dynamic width is higher or lower than the maximum and minimum width respectively, the visual width will not go above/below those widths." }, { "title": "Overlay", "url": "/posts/overlay/", "categories": "Documentation, Overlay", "tags": "", "date": "2022-02-14 12:31:00 +0800", "snippet": "Overlay is one of HunterPie’s core features, it is responsible to manage every single Widget.Design ModeDesign Mode makes all Widgets visible to mouse events, making them clickable and allowing the user to interact with them. When Design Mode is active you can drag-and-drop Widgets with your mouse, scale linearly with your mouse scroll and also individually close a widget you don’t want to see anymore.To toggle design mode, you can use ScrollLock or whatever Hotkey you set in your HunterPie’s configuration." }, { "title": "Abnormality Tray Widget", "url": "/posts/abnormality-tray-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-02-14 00:23:00 +0800", "snippet": "The Abnormality Tray widget allows you to track your buff and debuff durations, it’s useful when playing Hunting Horn, or when you just want to know how long a certain buff will last. HunterPie lets you create as many trays as you want, allowing you to separate abnormalities in different trays. Keep in mind the more widgets you have on your screen, the more it impacts performance.Creating a new trayTo create a new tray, open HunterPie’s settings in the Abnormality Trays tab and click on the , in case you want to delete a specific tray, click on the , it will prompt you with a confirmation so you can delete the tray. If you’re creating new bars while the game is running, you’ll have to restart HunterPie in order for it to visually create the bar widget.Configuring the trayTo configure your new tray, click on the . It will open a new window that lets you configure all the tray settings individually.Enabling abnormalitiesIn the configuration window, there’s a panel with all the available abnormalities, clicking on one of them will automatically enable tracking that abnormality in that individual tray. Icon Description Enabled Disabled OrientationOrientation is the setting that indicates which direction your tray will grow to fit all abnormalities, setting it to Horizontal will make the tray grow sideways until it reaches its maximum width, on the other hand, Vertical will make the bar grow downwards until it reaches the maximum height.Maximum SizeSetting a maximum size to your tray will cause it to not grow infinitely, wrapping new abnormalities downwards (if the orientation is Horizontal) or sideways (if the orientation is Vertical)." } ]
